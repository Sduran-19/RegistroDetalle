@page "/detailssistema/{SistemaID:int}";

@inject HttpClient httpClient
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<div class="card shadow-lg">
    @*Header*@
    <div class="card-header">
        <h3><strong>Detalle de Sistema</strong></h3>
    </div>
    @*Body*@
    <div class="card-body">
        @*Datos*@
        <div class="mb-1">
            <p class="mb-0">SistemaId: @sistemas.SistemaId</p>
        </div>
        <div class="mb-1">
            <p class="mb-0">Descripci&oacute;n: @sistemas.Nombre</p>
        </div>
    </div>

            <div class="card-footer bg-light d-flex justify-content-end">
                <div class="btn-group">
                <a type="button" href="/indexsistemas/" class="btn btn-outline-danger"><span class="fas fa-arrow-left"></span> Volver </a>
                </div>
            </div>
        </div>


@if (ModalMensaje)
{
    <div class="modal d-block" style="z-index: 999999; transition: transform 0.3s ease;">
        <div class="w-auto position-fixed top-50 start-50 translate-middle">
            <div class="modal-content" style="border-radius: 20px;">

                <div class="modal-body bg-text-center text-white" style="border-radius: 15px;">
                    <label class="fw-bold">@mensajeTexto</label>
                </div>

            </div>
        </div>
    </div>
}



@code {

    public Sistemas sistemas = new Sistemas();

    [Parameter]
    public int SistemaID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (SistemaID > 0)
        {
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var sistemaEncontrado = await httpClient.GetFromJsonAsync<Sistemas>("api/Sistemas/" + SistemaID);
        if (sistemaEncontrado != null)
        {
            this.sistemas = sistemaEncontrado;
        }
        else
        {
            await MostrarMensaje("Sistema no encontrado", "danger");
        }
    }

    string mensajeTexto = "";
    bool ModalMensaje = false;

    public async Task MostrarMensaje(string mensaje, string tipo)
    {
        mensajeTexto = mensaje;

        if (tipo == "success")
        {
            mensajeTexto = "success";
        }
        else
        {
            mensajeTexto = "danger";
        }

        ModalMensaje = true;
        StateHasChanged();
        await Task.Delay(3000);
        ModalMensaje = false;
        StateHasChanged();
    }
}

